{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nexport var Reddit = function () {\n  function Reddit() {\n    _classCallCheck(this, Reddit);\n  }\n\n  _createClass(Reddit, null, [{\n    key: \"get\",\n    value: function get(tag) {\n      var response, responseJson;\n      return _regeneratorRuntime.async(function get$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(fetch(\"https://reddit.com/r/\" + tag + \".json\"));\n\n            case 3:\n              response = _context.sent;\n              _context.next = 6;\n              return _regeneratorRuntime.awrap(response.json());\n\n            case 6:\n              responseJson = _context.sent;\n              return _context.abrupt(\"return\", responseJson.data.children);\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](0);\n              throw _context.t0;\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 10]], Promise);\n    }\n  }]);\n\n  return Reddit;\n}();","map":{"version":3,"sources":["/home/mundim/Documentos/React/HelloReactNative/api/Reddit.js"],"names":["Reddit","tag","fetch","response","json","responseJson","data","children"],"mappings":";;;AAAA,WAAaA,MAAb;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,WACI,aAAiBC,GAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAEuBC,KAAK,2BAAyBD,GAAzB,WAF5B;;AAAA;AAEME,cAAAA,QAFN;AAAA;AAAA,+CAG2BA,QAAQ,CAACC,IAAT,EAH3B;;AAAA;AAGMC,cAAAA,YAHN;AAAA,+CAIOA,YAAY,CAACC,IAAb,CAAkBC,QAJzB;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;;AAAA;AAAA","sourcesContent":["export class Reddit {\n    static async get(tag) {\n    try {\n    const response = await fetch(`https://reddit.com/r/${tag}.json`);\n    const responseJson = await response.json();\n    return responseJson.data.children;\n    } catch (e) {\n    throw e;\n    }\n}\n}"]},"metadata":{},"sourceType":"module"}