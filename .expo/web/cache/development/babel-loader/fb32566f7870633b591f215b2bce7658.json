{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nexport var Reddit = function () {\n  function Reddit() {\n    _classCallCheck(this, Reddit);\n  }\n\n  _createClass(Reddit, null, [{\n    key: \"get\",\n    value: function get() {\n      var response;\n      return _regeneratorRuntime.async(function get$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(fetch(\"https://reddit.com/r/javascript.json\", {\n                mode: 'no-cors'\n              }).then(function (response) {\n                return response.json();\n              }).then(function (json) {\n                return json.movies;\n              }).catch(function (error) {\n                console.error(error);\n              }));\n\n            case 2:\n              response = _context.sent;\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }]);\n\n  return Reddit;\n}();","map":{"version":3,"sources":["/home/mundim/Documentos/React/HelloReactNative/api/Reddit.js"],"names":["Reddit","fetch","mode","then","response","json","movies","catch","error","console"],"mappings":";;;AAAA,WAAaA,MAAb;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,WAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAC2BC,KAAK,yCAAyC;AAACC,gBAAAA,IAAI,EAAE;AAAP,eAAzC,CAAL,CAAkEC,IAAlE,CAAuE,UAACC,QAAD;AAAA,uBAAcA,QAAQ,CAACC,IAAT,EAAd;AAAA,eAAvE,EACtBF,IADsB,CACjB,UAACE,IAAD,EAAU;AACd,uBAAOA,IAAI,CAACC,MAAZ;AACD,eAHsB,EAItBC,KAJsB,CAIhB,UAACC,KAAD,EAAW;AAChBC,gBAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACD,eANsB,CAD3B;;AAAA;AACUJ,cAAAA,QADV;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;;AAAA;AAAA","sourcesContent":["export class Reddit {\n    \n    static async get() {\n        const response = await fetch(`https://reddit.com/r/javascript.json`, {mode: 'no-cors'}) .then((response) => response.json())\n        .then((json) => {\n          return json.movies;\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    // try {\n    //     const response = await fetch(`https://reddit.com/r/javascript.json`, {mode: 'no-cors'});\n    //     const responseJson = await response.json();\n    //     return responseJson.data.children;\n    // } catch (e) {\n    // throw e;\n   // }\n//     fetch('https://reddit.com/r/${tag}.json', {\n//   headers: {\n//     Accept: 'application/json',\n//     'Content-Type': 'application/json'\n//   },\n//   body: JSON.stringify({\n//     firstParam: 'yourValue',\n//     secondParam: 'yourOtherValue'\n//   })\n// });\n}\n}"]},"metadata":{},"sourceType":"module"}